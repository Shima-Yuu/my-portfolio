!function(e){var t={sectionContainer:"section",easing:"ease",animationTime:1e3,pagination:!0,updateURL:!1,keyboard:!0,beforeMove:null,afterMove:null,loop:!0,responsiveFallback:!1,direction:"vertical"};e.fn.swipeEvents=function(){return this.each(function(){var t,n,a=e(this);function i(e){var o=e.originalEvent.touches;if(o&&o.length){var s=t-o[0].pageX,r=n-o[0].pageY;s>=50&&a.trigger("swipeLeft"),s<=-50&&a.trigger("swipeRight"),r>=50&&a.trigger("swipeUp"),r<=-50&&a.trigger("swipeDown"),(Math.abs(s)>=50||Math.abs(r)>=50)&&a.unbind("touchmove",i)}}a.bind("touchstart",function(e){var o=e.originalEvent.touches;o&&o.length&&(t=o[0].pageX,n=o[0].pageY,a.bind("touchmove",i))})})},e.fn.onepage_scroll=function(n){var a=e.extend({},t,n),i=e(this),o=e(a.sectionContainer);function s(){var t=!1,n=typeof a.responsiveFallback;"number"==n&&(t=e(window).width()<a.responsiveFallback),"boolean"==n&&(t=a.responsiveFallback),"function"==n&&(valFunction=a.responsiveFallback(),t=valFunction,typeOFv=typeof t,"number"==typeOFv&&(t=e(window).width()<valFunction)),t?(e("body").addClass("disabled-onepage-scroll"),e(document).unbind("mousewheel DOMMouseScroll MozMousePixelScroll"),i.swipeEvents().unbind("swipeDown swipeUp")):(e("body").hasClass("disabled-onepage-scroll")&&(e("body").removeClass("disabled-onepage-scroll"),e("html, body, .wrapper").animate({scrollTop:0},"fast")),i.swipeEvents().bind("swipeDown",function(t){e("body").hasClass("disabled-onepage-scroll")||t.preventDefault(),i.moveUp()}).bind("swipeUp",function(t){e("body").hasClass("disabled-onepage-scroll")||t.preventDefault(),i.moveDown()}),e(document).bind("mousewheel DOMMouseScroll MozMousePixelScroll",function(e){e.preventDefault(),r(e,e.originalEvent.wheelDelta||-e.originalEvent.detail)}))}function r(e,t){deltaOfInterest=t;var n=(new Date).getTime();n-lastAnimation<quietPeriod+a.animationTime?e.preventDefault():(deltaOfInterest<0?i.moveDown():i.moveUp(),lastAnimation=n)}if(total=o.length,status="off",topPos=0,leftPos=0,lastAnimation=0,quietPeriod=500,paginationList="",e.fn.transformPage=function(t,n,a){if("function"==typeof t.beforeMove&&t.beforeMove(a),e("html").hasClass("ie8"))if("horizontal"==t.direction){var o=i.width()/100*n;e(this).animate({left:o+"px"},t.animationTime)}else{o=i.height()/100*n;e(this).animate({top:o+"px"},t.animationTime)}else e(this).css({"-webkit-transform":"horizontal"==t.direction?"translate3d("+n+"%, 0, 0)":"translate3d(0, "+n+"%, 0)","-webkit-transition":"all "+t.animationTime+"ms "+t.easing,"-moz-transform":"horizontal"==t.direction?"translate3d("+n+"%, 0, 0)":"translate3d(0, "+n+"%, 0)","-moz-transition":"all "+t.animationTime+"ms "+t.easing,"-ms-transform":"horizontal"==t.direction?"translate3d("+n+"%, 0, 0)":"translate3d(0, "+n+"%, 0)","-ms-transition":"all "+t.animationTime+"ms "+t.easing,transform:"horizontal"==t.direction?"translate3d("+n+"%, 0, 0)":"translate3d(0, "+n+"%, 0)",transition:"all "+t.animationTime+"ms "+t.easing});e(this).one("webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend",function(e){"function"==typeof t.afterMove&&t.afterMove(a)})},e.fn.moveDown=function(){var t=e(this);if(index=e(a.sectionContainer+".active").data("index"),current=e(a.sectionContainer+"[data-index='"+index+"']"),next=e(a.sectionContainer+"[data-index='"+(index+1)+"']"),next.length<1){if(1!=a.loop)return;pos=0,next=e(a.sectionContainer+"[data-index='1']")}else pos=100*index*-1;if("function"==typeof a.beforeMove&&a.beforeMove(next.data("index")),current.removeClass("active"),next.addClass("active"),1==a.pagination&&(e(".onepage-pagination li a[data-index='"+index+"']").removeClass("active"),e(".onepage-pagination li a[data-index='"+next.data("index")+"']").addClass("active")),e("body")[0].className=e("body")[0].className.replace(/\bviewing-page-\d.*?\b/g,""),e("body").addClass("viewing-page-"+next.data("index")),history.replaceState&&1==a.updateURL){var n=window.location.href.substr(0,window.location.href.indexOf("#"))+"#"+(index+1);history.pushState({},document.title,n)}t.transformPage(a,pos,next.data("index"))},e.fn.moveUp=function(){var t=e(this);if(index=e(a.sectionContainer+".active").data("index"),current=e(a.sectionContainer+"[data-index='"+index+"']"),next=e(a.sectionContainer+"[data-index='"+(index-1)+"']"),next.length<1){if(1!=a.loop)return;pos=100*(total-1)*-1,next=e(a.sectionContainer+"[data-index='"+total+"']")}else pos=100*(next.data("index")-1)*-1;if("function"==typeof a.beforeMove&&a.beforeMove(next.data("index")),current.removeClass("active"),next.addClass("active"),1==a.pagination&&(e(".onepage-pagination li a[data-index='"+index+"']").removeClass("active"),e(".onepage-pagination li a[data-index='"+next.data("index")+"']").addClass("active")),e("body")[0].className=e("body")[0].className.replace(/\bviewing-page-\d.*?\b/g,""),e("body").addClass("viewing-page-"+next.data("index")),history.replaceState&&1==a.updateURL){var n=window.location.href.substr(0,window.location.href.indexOf("#"))+"#"+(index-1);history.pushState({},document.title,n)}t.transformPage(a,pos,next.data("index"))},e.fn.moveTo=function(t){if(current=e(a.sectionContainer+".active"),next=e(a.sectionContainer+"[data-index='"+t+"']"),next.length>0){if("function"==typeof a.beforeMove&&a.beforeMove(next.data("index")),current.removeClass("active"),next.addClass("active"),e(".onepage-pagination li a.active").removeClass("active"),e(".onepage-pagination li a[data-index='"+t+"']").addClass("active"),e("body")[0].className=e("body")[0].className.replace(/\bviewing-page-\d.*?\b/g,""),e("body").addClass("viewing-page-"+next.data("index")),pos=100*(t-1)*-1,history.replaceState&&1==a.updateURL){var n=window.location.href.substr(0,window.location.href.indexOf("#"))+"#"+(t-1);history.pushState({},document.title,n)}i.transformPage(a,pos,t)}},i.addClass("onepage-wrapper").css("position","relative"),e.each(o,function(t){e(this).css({position:"absolute",top:topPos+"%"}).addClass("section").attr("data-index",t+1),e(this).css({position:"absolute",left:"horizontal"==a.direction?leftPos+"%":0,top:"vertical"==a.direction||"horizontal"!=a.direction?topPos+"%":0}),"horizontal"==a.direction?leftPos+=100:topPos+=100,1==a.pagination&&(paginationList+="<li><a data-index='"+(t+1)+"' href='#"+(t+1)+"'></a></li>")}),i.swipeEvents().bind("swipeDown",function(t){e("body").hasClass("disabled-onepage-scroll")||t.preventDefault(),i.moveUp()}).bind("swipeUp",function(t){e("body").hasClass("disabled-onepage-scroll")||t.preventDefault(),i.moveDown()}),1==a.pagination&&(e("ul.onepage-pagination").length<1&&e("<ul class='onepage-pagination'></ul>").prependTo("body"),"horizontal"==a.direction?(posLeft=i.find(".onepage-pagination").width()/2*-1,i.find(".onepage-pagination").css("margin-left",posLeft)):(posTop=i.find(".onepage-pagination").height()/2*-1,i.find(".onepage-pagination").css("margin-top",posTop)),e("ul.onepage-pagination").html(paginationList)),""!=window.location.hash&&"#1"!=window.location.hash)if(init_index=window.location.hash.replace("#",""),parseInt(init_index)<=total&&parseInt(init_index)>0){if(e(a.sectionContainer+"[data-index='"+init_index+"']").addClass("active"),e("body").addClass("viewing-page-"+init_index),1==a.pagination&&e(".onepage-pagination li a[data-index='"+init_index+"']").addClass("active"),next=e(a.sectionContainer+"[data-index='"+init_index+"']"),next&&(next.addClass("active"),1==a.pagination&&e(".onepage-pagination li a[data-index='"+init_index+"']").addClass("active"),e("body")[0].className=e("body")[0].className.replace(/\bviewing-page-\d.*?\b/g,""),e("body").addClass("viewing-page-"+next.data("index")),history.replaceState&&1==a.updateURL)){var l=window.location.href.substr(0,window.location.href.indexOf("#"))+"#"+init_index;history.pushState({},document.title,l)}pos=100*(init_index-1)*-1,i.transformPage(a,pos,init_index)}else e(a.sectionContainer+"[data-index='1']").addClass("active"),e("body").addClass("viewing-page-1"),1==a.pagination&&e(".onepage-pagination li a[data-index='1']").addClass("active");else e(a.sectionContainer+"[data-index='1']").addClass("active"),e("body").addClass("viewing-page-1"),1==a.pagination&&e(".onepage-pagination li a[data-index='1']").addClass("active");return 1==a.pagination&&e(".onepage-pagination li a").click(function(){var t=e(this).data("index");i.moveTo(t)}),e(document).bind("mousewheel DOMMouseScroll MozMousePixelScroll",function(t){t.preventDefault();var n=t.originalEvent.wheelDelta||-t.originalEvent.detail;e("body").hasClass("disabled-onepage-scroll")||r(t,n)}),0!=a.responsiveFallback&&(e(window).resize(function(){s()}),s()),1==a.keyboard&&e(document).keydown(function(t){var n=t.target.tagName.toLowerCase();if(!e("body").hasClass("disabled-onepage-scroll"))switch(t.which){case 38:"input"!=n&&"textarea"!=n&&i.moveUp();break;case 40:case 32:"input"!=n&&"textarea"!=n&&i.moveDown();break;case 33:"input"!=n&&"textarea"!=n&&i.moveUp();break;case 34:"input"!=n&&"textarea"!=n&&i.moveDown();break;case 36:i.moveTo(1);break;case 35:i.moveTo(total);break;default:return}}),!1}}(window.jQuery),function(e){e.fn.skillBars=function(t){var n=e.extend({from:0,to:!1,speed:1e3,interval:100,decimals:0,onUpdate:null,onComplete:null,classes:{skillBarBar:".skillbar-bar",skillBarPercent:".skillbar-percent"}},t);return this.each(function(){var t=e(this),a=0!=n.to?n.to:parseInt(t.attr("data-percent"));a>100&&(a=100);var i=n.from,o=Math.ceil(n.speed/n.interval),s=(a-i)/o,r=0,l=setInterval(function(){i+=s,r++,e(t).find(n.classes.skillBarPercent).text(i.toFixed(n.decimals)+"%"),"function"==typeof n.onUpdate&&n.onUpdate.call(t,i);r>=o&&(clearInterval(l),i=a,"function"==typeof n.onComplete&&n.onComplete.call(t,i))},n.interval);t.find(n.classes.skillBarBar).animate({width:parseInt(t.attr("data-percent"))+"%"},n.speed)})}}(jQuery),function(e,t,n){"use strict";function a(e,t){var n=null;return function(){var a=this,i=arguments;null===n&&(n=setTimeout(function(){e.apply(a,i),n=null},t))}}var i,o=(i={},function(e){if(i[e]!==n)return i[e];var t=document.createElement("div").style,a=e.charAt(0).toUpperCase()+e.slice(1),o=(e+" "+["webkit","moz","ms","o"].join(a+" ")+a).split(" ");for(var s in o)if(o[s]in t)return i[e]=o[s];return i[e]=!1}),s="http://www.w3.org/2000/svg",r=e(t),l=o("transform"),d={itemContainer:"ul",itemSelector:"li",start:"center",fadeIn:400,loop:!1,autoplay:!1,pauseOnHover:!0,style:"coverflow",spacing:-.6,click:!0,keyboard:!0,scrollwheel:!0,touch:!0,nav:!1,buttons:!1,buttonPrev:"Previous",buttonNext:"Next",onItemSwitch:!1},p={main:"flipster",active:"flipster--active",container:"flipster__container",nav:"flipster__nav",navChild:"flipster__nav__child",navItem:"flipster__nav__item",navLink:"flipster__nav__link",navCurrent:"flipster__nav__item--current",navCategory:"flipster__nav__item--category",navCategoryLink:"flipster__nav__link--category",button:"flipster__button",buttonPrev:"flipster__button--prev",buttonNext:"flipster__button--next",item:"flipster__item",itemCurrent:"flipster__item--current",itemPast:"flipster__item--past",itemFuture:"flipster__item--future",itemContent:"flipster__item__content"},c=new RegExp("\\b("+p.itemCurrent+"|"+p.itemPast+"|"+p.itemFuture+")(.*?)(\\s|$)","g"),u=new RegExp("\\s\\s+","g");e.fn.flipster=function(t){if("string"==typeof t){var i=Array.prototype.slice.call(arguments,1);return this.each(function(){var n=e(this).data("methods");return n[t]?n[t].apply(this,i):this})}var o=e.extend({},d,t);return this.each(function(){var t,i,d,f,v,g,h,m,b,x=e(this),w=[],y=0,_=!1,C=!1;function k(t){return t=t||"next",e('<button class="'+p.button+" "+("next"===t?p.buttonNext:p.buttonPrev)+'" role="button" />').html((a="next"===(n=t)?o.buttonNext:o.buttonPrev,"custom"===o.buttons?a:'<svg viewBox="0 0 13 20" xmlns="'+s+'" aria-labelledby="title"><title>'+a+'</title><polyline points="10,3 3,10 10,17"'+("next"===n?' transform="rotate(180 6.5,10)"':"")+"/></svg>")).on("click",function(e){S(t),e.preventDefault()});var n,a}function M(){x.css("transition",""),i.css("transition",""),v.css("transition","")}function D(t){var n,a;t&&(x.css("transition","none"),i.css("transition","none"),v.css("transition","none")),d=i.width(),i.height((a=0,v.each(function(){n=e(this).height(),a<n&&(a=n)}),a)),d?(f&&(clearInterval(f),f=!1),v.each(function(n){var a,i,s=e(this);s.attr("class",function(e,t){return t&&t.replace(c,"").replace(u," ")}),a=s.outerWidth(),0!==o.spacing&&s.css("margin-right",a*o.spacing+"px"),i=s.position().left,w[n]=-1*(i+a/2-d/2),n===v.length-1&&(I(),t&&setTimeout(M,1))})):f=f||setInterval(function(){D(t)},500)}function I(){var t,a,s,r=v.length;v.each(function(n){t=e(this),a=" ",s=n===y?(a+=p.itemCurrent,r+1):n<y?(a+=p.itemPast+" "+p.itemPast+"-"+(y-n),r-(y-n)):(a+=p.itemFuture+" "+p.itemFuture+"-"+(n-y),r-(n-y)),t.css("z-index",s).attr("class",function(e,t){return t&&t.replace(c,"").replace(u," ")+a})}),0<=y&&(d&&w[y]!==n||D(!0),l?i.css("transform","translateX("+w[y]+"px)"):i.css({left:w[y]+"px"})),function(){if(o.nav){var t=g.data("flip-category");m.removeClass(p.navCurrent),b.filter(function(){return e(this).data("index")===y||t&&e(this).data("category")===t}).parent().addClass(p.navCurrent)}}()}function S(e){var t=y;if(!(v.length<=1))return"prev"===e?0<y?y--:o.loop&&(y=v.length-1):"next"===e?y<v.length-1?y++:o.loop&&(y=0):"number"==typeof e?y=e:e!==n&&(y=v.index(e),o.loop&&t!=y&&(t==v.length-1&&y!=v.length-2&&(y=0),0==t&&1!=y&&(y=v.length-1))),g=v.eq(y),y!==t&&o.onItemSwitch&&o.onItemSwitch.call(x,v[y],v[t]),I(),x}function P(e){return o.autoplay=e||o.autoplay,clearInterval(_),_=setInterval(function(){var e=y;S("next"),e!==y||o.loop||clearInterval(_)},o.autoplay),x}function T(){return clearInterval(_),_=0,x}function z(e){return T(),o.autoplay&&e&&(_=-1),x}function $(){D(!0),x.hide().css("visibility","").addClass(p.active).fadeIn(o.fadeIn)}function L(){var t;if(i=x.find(o.itemContainer).addClass(p.container),!((v=i.find(o.itemSelector)).length<=1))return v.addClass(p.item).each(function(){var t=e(this);t.children("."+p.itemContent).length||t.wrapInner('<div class="'+p.itemContent+'" />')}),o.click&&v.on("click.flipster touchend.flipster",function(t){C||(e(this).hasClass(p.itemCurrent)||t.preventDefault(),S(this))}),o.buttons&&1<v.length&&(x.find("."+p.button).remove(),x.append(k("prev"),k("next"))),t={},!o.nav||v.length<=1||(h&&h.remove(),h=e('<ul class="'+p.nav+'" role="navigation" />'),b=e(""),v.each(function(n){var a=e(this),i=a.data("flip-category"),o=a.data("flip-title")||a.attr("title")||n,s=e('<a href="#" class="'+p.navLink+'">'+o+"</a>").data("index",n);if(b=b.add(s),i){if(!t[i]){var r=e('<li class="'+p.navItem+" "+p.navCategory+'">'),l=e('<a href="#" class="'+p.navLink+" "+p.navCategoryLink+'" data-flip-category="'+i+'">'+i+"</a>").data("category",i).data("index",n);t[i]=e('<ul class="'+p.navChild+'" />'),b=b.add(l),r.append(l,t[i]).appendTo(h)}t[i].append(s)}else h.append(s);s.wrap('<li class="'+p.navItem+'">')}),h.on("click","a",function(t){var n=e(this).data("index");0<=n&&(S(n),t.preventDefault())}),"after"===o.nav?x.append(h):x.prepend(h),m=h.find("."+p.navItem)),0<=y&&S(y),x}t={jump:S,next:function(){return S("next")},prev:function(){return S("prev")},play:P,stop:T,pause:z,index:L},x.data("methods",t),x.hasClass(p.active)||function(){var e;if(x.css("visibility","hidden"),L(),v.length<=1)x.css("visibility","");else{e=!!o.style&&"flipster--"+o.style.split(" ").join(" flipster--"),x.addClass([p.main,l?"flipster--transform":" flipster--no-transform",e,o.click?"flipster--click":""].join(" ")),o.start&&(y="center"===o.start?Math.floor(v.length/2):o.start),S(y);var t,n,s,d,c,u,f,g,h=x.find("img");if(h.length){var m=0;h.on("load",function(){++m>=h.length&&$()}),setTimeout($,750)}else $();r.on("resize.flipster",a(D,400)),o.autoplay&&P(),o.pauseOnHover&&i.on("mouseenter.flipster",function(){_?z(!0):T()}).on("mouseleave.flipster",function(){-1===_&&P()}),t=x,o.keyboard&&(t[0].tabIndex=0,t.on("keydown.flipster",a(function(e){var t=e.which;37!==t&&39!==t||(S(37===t?"prev":"next"),e.preventDefault())},250))),function(e){if(o.scrollwheel){var t,n,i=!1,s=0,r=0,l=0,d=/mozilla/.test(navigator.userAgent.toLowerCase())&&!/webkit/.test(navigator.userAgent.toLowerCase());e.on("mousewheel.flipster wheel.flipster",function(){i=!0}).on("mousewheel.flipster wheel.flipster",a(function(e){clearTimeout(r),r=setTimeout(function(){l=s=0},300),e=e.originalEvent,l+=e.wheelDelta||-1*(e.deltaY+e.deltaX),Math.abs(l)<25&&!d||(s++,n!==(t=0<l?"prev":"next")&&(s=0),n=t,(s<6||s%3==0)&&S(t),l=0)},50)),e.on("mousewheel.flipster wheel.flipster",function(e){i&&(e.preventDefault(),i=!1)})}}(i),n=i,o.touch&&n.on({"touchstart.flipster":function(e){e=e.originalEvent,s=e.touches?e.touches[0].clientX:e.clientX,d=e.touches?e.touches[0].clientY:e.clientY},"touchmove.flipster":function(e){e=e.originalEvent,c=e.touches?e.touches[0].clientX:e.clientX,u=e.touches?e.touches[0].clientY:e.clientY,g=c-s,f=u-d,30<Math.abs(g)&&Math.abs(f)<100&&e.preventDefault()},"touchend.flipster touchcancel.flipster ":function(){g=c-s,f=u-d,30<Math.abs(g)&&Math.abs(f)<100&&S(0<g?"prev":"next")}})}}()})}}(jQuery,window),function(e){e.fn.t=function(t,n){return this.each(function(){var a,o=n,r=t,l=e(this),d="pause",c=!1,u=-1,f="​",h="12qwertyuiop[]asdfghjkl;zxcvbnm,./~!@#$%^&*()_+:1234567890-=op".split([]),m=function(t,n){return e.type(t)[0]==(n||"n")},b=function(){return g=e.grep(M,function(e){return"&"==e[0]||!e[1]}).length-1,g>-1?g:0},x=function(e){u!=e&&o.blink&&(o.blink_perm||y.parent().data("blinking",u=e?1:0))};if(""===r&&(r="<del>*</del>"),l.data().is_typing)return r==d&&(l.data(d,m(o,"b")?oo_=o:l.data(d)?oo_=!1:oo_=!0),l.data("blinking",oo_?1:0)),this;if(r==d)return this;if(l.data("is_typing",1),m(r,"o")&&(o=r),/t\-/.test(l.attr("class")))return this;if("add"==r&&l.data().t){var w=o,y=(o=e.extend(l.data()),l=e(":first",l)),C=m(o.typing,"f");w="<"+o.tag+' class="typing-add">'+w+"</"+o.tag+">"}else{"add"==r&&(r=o,o={});o=e.extend({t:!0,delay:!1,speed:75,speed_vary:!1,caret:"▎",tag:"span",blink:!1,blink_perm:!1,repeat:-3,pause_on_click:!1,wrap:!1,mistype:!1,locale:"en",init:!1,typing:!1,fin:!1},o||l.data());var k,M,D,I,S=!1;w=!1;l.data().t||(l.wrapInner(e("<"+o.tag+"/>",{class:"t-container",style:"top:auto;bottom:auto;"})),/^[ar]/.test(l.css("position"))||l.css({position:"relative"}),l.css({overflow:"hidden"})),o.wrap&&!l.parent().data().t_wrap&&(l.wrap(e("<div/>",/[.#]/.test(o.wrap[0])?"#"==o.wrap[0]?{id:o.wrap.substr(1)}:{class:o.wrap.substr(1)}:{style:o.wrap})),l.parent().data("t_wrap",1)),m(o.caret,"s")&&!e(".t-caret",l)[0]&&(!0===o.blink&&(o.blink=200),m(o.blink)&&o.blink<50&&(o.blink=50),!m(o.blink)&&(o.blink=!1),S=e("<"+o.tag+"/>",{class:"t-caret",html:o.caret}).appendTo(l),o.blink&&l.append(f)&&l.data("bi",setInterval(function(){(y.parent().data().blinking|(v="h"==S.css("visibility")[0])||o.blink_perm)&&S.css({visibility:v?"visible":"hidden"})},m(o.blink)?o.blink:o.speed*(o.speed_vary?4:5)))),o.blink||l.data().bi&&clearInterval(l.data().bi)&&l.removeData("bi"),!m(o.blink_perm,"b")&&(o.blink_perm=!0),o.speed=!m(o.speed)||o.speed<10?10:o.speed,o.speed_vary&&(o.speed/=2.5),o.mistype>1||(o.mistype=!1),l.data(o),e(".typing-0",l).replaceWith(function(){return this.childNodes}),e(".typing-add",l).remove(),y=l=e(":first",l),""==(M=m(r,"s")?r:l.html())&&(M=f),l.empty(),y.parent().show().css({visibility:"visible"}),m(o.delay)&&o.delay>0&&(k=~~(1e3*o.delay/o.speed))&&o.blink_perm||l.parent().data("blinking",1),C=m(o.typing,"f"),!0===o.pause_on_click&&l.parent().off("click").click(function(t){"1"!=e(t.target).data().click&&e(this).t("pause")})}/<kbd.*?>/i.test(M=String(w||M))&&l.parent().data("kbd",j_=1)&&l.parent().data("mistype",l.parent().data("mistype")?_j=l.parent().data().mistype:_j=10)&&(o.mistype=_j)&&(o.kbd=j_||!1),M=M.replace(/(.*?)[\u200b]+$/,"$1").replace(/<\!\-\-([\s\S]+?)\-\->/g,"$1").replace(/<ins>([^0-9])<\/ins>/g,"$1").replace(/<(embed|command|col|wbr|img|br|input|hr)(.*?)[\/]?>/g,"<#$1$2/>").replace(/<ins>\s*(\d*[.]?\d*)\s*(<\/ins>)/g,'<ins data-ins="$1"></ins>').replace(/<ins(.*?)>([\s\S]*?)(<\/ins>)/g,function(e,t,n){return"<#ins"+t+">"+n.replace(/<(?!#)/g,"<#")+"<#/ins>"+(n?"":"</ins>")}).replace(/<(del.*?data-del=")(.*?)(".*?)><\/(del>)/g,"<#$1$2$3><#/$4$2</$4").replace(/<del(.*?)>([\s\S]*?)<\/del>/g,function(e,t,n,a){return s=n.match(/<s>\s*(.*?)\s*<\/s>/i),s=s&&s[0]?' data-s="'+(s[1]||"1")+'"':"",i=n.match(/data-ins=\"(.*?)\"/),i=i&&i[1]?i[1]:""==s?.25:.75,n=n.replace(/(<s>.*?<\/s>|<[\/]?.*?>)/g,""),"<del"+t+s+' data-del="'+n.replace(/\n/,"\\n")+'" data-ins="'+i+'">'+("*"!=n?n:"")+"</del>"}).replace(/<(\w+)(.*?)>/g,"<$1$2><#/$1>").replace(/<\/(\w+)>/g,"</> ($1)").replace(/<[#]+/g,"<").replace(/(\/del>)\*</g,"$1<").match(/<ins.*?>[\s\S]*?<\/ins>|<[^<]+\/>|<\/> \(\w+\)|<[\s\S]+?><\/\w+>|&[#x]?[a-z0-9]+;|\r|\n|\t|\S|\s/gi),!m(k)&&(k=M.shift()),M.push(f),"de"==o.locale&&(h='12qwertzuiopü+asdfghjklöä#<yxcvbnm,.-!"§$%&/(()=?1234567890ß*p+'),D=b()+1,!w&&m(o.init,"f")&&o.init(y.parent()),I=setInterval(function(){if(!y.parent().data(d)&&!c){if(c=!c,m(k)){if(--k>0)return c=!c,void x(l.data().ins<=.25?0:1);k=l.data().ins?"</>":M.shift()}else if(o.speed_vary&&~~(4*Math.random()))return void(c=!c);if(x(0),l.data().del&&(l.data().s&&!k[0]&&l.text(""),a=String(l.data().del),!m(k,"a")&&"/"==k[1]&&(k=a.replace(/\\n/g,"\n").split([])),m(k,"a"))){if(p=k.pop())return l.data().s?l.html(k.join([])+"<mark "+("."==(_=String(l.data().s))[0]?'class="'+_.substr(1)+'"':'style="background:'+("1"==_?"yellow":_.split(",")[0])+((_=_.split(",")[1])?";color:"+_:"")+';"')+">"+l.data().del.substr(k.length)+"</mark>"):l.text(k.join([])),void(c=!c);"*"==a&&(y.wrapInner(e("<"+o.tag+"/>",{class:"typing-0",style:"display:none;"})),l=l.parent(),w&&(M=e.merge(["<"+o.tag+' class="typing-add"></'+o.tag+">"],M,["</"+o.tag+">"]),l=l.parent())),l=l.parent(),a==f&&l.find(":last").remove(),k=""}for(;"/"==k[1];)l=l.parent(),k=M.shift()||"";for(;l.append(k),C&&o.typing(y.parent(),k,b(),D),!/<ins.*?>[\s\S]+</.test(k)&&/></.test(k)&&(l=l.find(":last")),M[0]&&/<\w+/.test(M[0]);)k=M.shift();if(!(k=M.shift()))return clearInterval(I),y.parent().removeData(["is_typing",d]),m(o.repeat)&&--o.repeat,o.repeat>-1?(o.init=!1,void y.parent().t(m(r,"o")?o:r,o)):(x(1),void(m(o.fin,"f")&&o.fin(y.parent())));(o.mistype&&!o.kbd||o.kbd&&/kbd/i.test(l.prop("tagName")))&&k&&!k[1]&&l.data().del!=f&&" "!=k&&!~~(Math.random()*o.mistype)&&(__=e.inArray(k.toLowerCase(),h,2))>-1&&(__+=1+~~(2*Math.random()),~~(2*Math.random())&&(__-=3),M=e.merge([k.charCodeAt(0)<90?h[__].toUpperCase():h[__],"</del>",k],M),k='<del data-ins=".25" data-del="​"></del>'),k&&"/"==k[1]&&l.data().ins&&(k=~~(1e3*Number(l.data().ins)/o.speed)),c=!c}},o.speed)})}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,